export const Scripts: ModdedBattleScriptsData = {
	inherit: 'gen6',
	init() {
		const abilityToItem: {[k: string]: string} = {
			aerilate: 'airballoon',
			adaptability: 'apicotberry',
			aftermath: 'premierball',
			analytic: 'watergem',
			anticipation: 'blackbelt',
			arenatrap: 'buggem',
			aromaveil: 'blackglasses',
			aurabreak: 'blacksludge',
			baddreams: 'brightpowder',
			battlearmor: 'cellbattery',
			bigpecks: 'charcoal',
			blaze: 'chartiberry',
			bulletproof: 'chestoberry',
			cheekpouch: 'chilanberry',
			chlorophyll: 'chopleberry',
			clearbody: 'cobaberry',
			cloudnine: 'colburberry',
			colorchange: 'custapberry',
			competitive: 'damprock',
			compoundeyes: 'dragonfang',
			contrary: 'darkgem',
			cursedbody: 'ejectbutton',
			cutecharm: 'expertbelt',
			damp: 'flameorb',
			darkaura: 'focusband',
			defeatist: 'fullincense',
			defiant: 'ganlonberry',
			deltastream: 'grepaberry',
			desolateland: 'gripclaw',
			download: 'habanberry',
			drizzle: 'hardstone',
			drought: 'heatrock',
			dryskin: 'iapapaberry',
			earlybird: 'icyrock',
			effectspore: 'kasibberry',
			fairyaura: 'kebiaberry',
			filter: 'keeberry',
			flamebody: 'kelpsyberry',
			flareboost: 'kingsrock',
			flashfire: 'laggingtail',
			flowergift: 'lansatberry',
			flowerveil: 'laxincense',
			forecast: 'leppaberry',
			forewarn: 'liechiberry',
			friendguard: 'luminousmoss',
			frisk: 'magnet',
			furcoat: 'dragongem',
			galewings: 'marangaberry',
			gluttony: 'metalcoat',
			gooey: 'metronome',
			grasspelt: 'micleberry',
			guts: 'miracleseed',
			harvest: 'muscleband',
			healer: 'mysticwater',
			heatproof: 'nevermeltice',
			heavymetal: 'occaberry',
			honeygather: 'oddincense',
			hugepower: 'electricgem',
			hustle: 'passhoberry',
			hydration: 'payapaberry',
			hypercutter: 'petayaberry',
			icebody: 'poisonbarb',
			illuminate: 'quickclaw',
			illusion: 'razorclaw',
			immunity: 'razorfang',
			imposter: 'fairygem',
			infiltrator: 'rindoberry',
			innerfocus: 'rockincense',
			insomnia: 'roseincense',
			intimidate: 'redcard',
			ironbarbs: 'roseliberry',
			ironfist: 'safetygoggles',
			justified: 'salacberry',
			keeneye: 'scopelens',
			klutz: 'seaincense',
			leafguard: 'sharpbeak',
			levitate: 'nomelberry',
			lightmetal: 'shellbell',
			lightningrod: 'shucaberry',
			limber: 'silkscarf',
			liquidooze: 'silverpowder',
			magicbounce: 'smoothrock',
			magicguard: 'snowball',
			magician: 'softsand',
			magmaarmor: 'spelltag',
			magnetpull: 'starfberry',
			marvelscale: 'stickybarb',
			megalauncher: 'tangaberry',
			minus: 'twistedspoon',
			moldbreaker: 'wacanberry',
			moody: 'waveincense',
			motordrive: 'weaknesspolicy',
			moxie: 'whiteherb',
			multiscale: 'widelens',
			multitype: 'wiseglasses',
			mummy: 'yacheberry',
			naturalcure: 'zoomlens',
			noguard: 'adamantorb',
			normalize: 'burndrive',
			oblivious: 'chilldrive',
			overcoat: 'deepseascale',
			overgrow: 'deepseatooth',
			owntempo: 'dousedrive',
			parentalbond: 'firegem',
			pickpocket: 'lightball',
			pickup: 'luckypunch',
			pixilate: 'griseousorb',
			plus: 'lustrousorb',
			poisonheal: 'metalpowder',
			poisonpoint: 'quickpowder',
			poisontouch: 'shockdrive',
			prankster: 'mail',
			pressure: 'stick',
			primordialsea: 'thickclub',
			protean: 'aguavberry',
			purepower: 'icegem',
			quickfeet: 'aspearberry',
			raindish: 'bindingband',
			rattled: 'cheriberry',
			reckless: 'destinyknot',
			refrigerate: 'enigmaberry',
			regenerator: 'figyberry',
			rivalry: 'floatstone',
			rockhead: 'ironball',
			roughskin: 'jabocaberry',
			runaway: 'machobrace',
			sandforce: 'magoberry',
			sandrush: 'oranberry',
			sandstream: 'pechaberry',
			sandveil: 'persimberry',
			sapsipper: 'rawstberry',
			scrappy: 'ringtarget',
			serenegrace: 'rowapberry',
			shadowtag: 'poisongem',
			shedskin: 'wikiberry',
			sheerforce: 'armorfossil',
			shellarmor: 'belueberry',
			shielddust: 'blukberry',
			simple: 'psychicgem',
			skilllink: 'cherishball',
			slowstart: 'clawfossil',
			sniper: 'cornnberry',
			snowcloak: 'coverfossil',
			snowwarning: 'diveball',
			solarpower: 'domefossil',
			solidrock: 'dreamball',
			soundproof: 'durinberry',
			speedboost: 'duskball',
			stall: 'electirizer',
			stancechange: 'energypowder',
			static: 'fastball',
			steadfast: 'friendball',
			stench: 'greatball',
			stickyhold: 'healball',
			stormdrain: 'heavyball',
			strongjaw: 'helixfossil',
			sturdy: 'hondewberry',
			suctioncups: 'levelball',
			superluck: 'loveball',
			swarm: 'lureball',
			sweetveil: 'luxuryball',
			swiftswim: 'magostberry',
			symbiosis: 'masterball',
			synchronize: 'moonball',
			tangledfeet: 'nanabberry',
			technician: 'nestball',
			telepathy: 'netball',
			thickfat: 'oldamber',
			tintedlens: 'pamtreberry',
			torrent: 'parkball',
			toughclaws: 'pinapberry',
			toxicboost: 'plumefossil',
			trace: 'pokeball',
			truant: 'pomegberry',
			unaware: 'qualotberry',
			unburden: 'quickball',
			unnerve: 'rabutaberry',
			victorystar: 'rarebone',
			vitalspirit: 'razzberry',
			voltabsorb: 'repeatball',
			waterabsorb: 'rootfossil',
			waterveil: 'safariball',
			weakarmor: 'skullfossil',
			whitesmoke: 'spelonberry',
			wonderguard: 'steelgem',
			wonderskin: 'sportball',
			zenmode: 'tamatoberry',
		};
		Object.keys(abilityToItem).forEach(ability => {
			const itemid = abilityToItem[ability] as ID;
			this.modData("Abilities", ability).item = itemid;
			const item = this.data.Items[itemid];
			/// this.data.Items[itemid] = Object.assign({}, this.getAbility(ability), {
			this.items.itemCache.set(itemid as ID, {
				...this.abilities.get(ability),
				id: item.id,
				name: item.name,
				spritenum: item.spritenum,
				num: item.num,
				gen: item.gen,
				desc: item.desc,
				onTakeItem: false,
				ability: ability,
			} as any as Item);
			/// });
		});
	},
	pokemon: {
		getItem() {
			const itemToAbility: {[k: string]: string} = {
				adamantorb: 'noguard',
				aguavberry: 'protean',
				airballoon: 'aerilate',
				apicotberry: 'adaptability',
				armorfossil: 'sheerforce',
				aspearberry: 'quickfeet',
				belueberry: 'shellarmor',
				bindingband: 'raindish',
				blackbelt: 'anticipation',
				blackglasses: 'aromaveil',
				blacksludge: 'aurabreak',
				blukberry: 'shielddust',
				brightpowder: 'baddreams',
				buggem: 'arenatrap',
				burndrive: 'normalize',
				cellbattery: 'battlearmor',
				charcoal: 'bigpecks',
				chartiberry: 'blaze',
				cheriberry: 'rattled',
				cherishball: 'skilllink',
				chestoberry: 'bulletproof',
				chilanberry: 'cheekpouch',
				chilldrive: 'oblivious',
				chopleberry: 'chlorophyll',
				clawfossil: 'slowstart',
				cobaberry: 'clearbody',
				colburberry: 'cloudnine',
				cornnberry: 'sniper',
				coverfossil: 'snowcloak',
				custapberry: 'colorchange',
				damprock: 'competitive',
				darkgem: 'contrary',
				deepseascale: 'overcoat',
				deepseatooth: 'overgrow',
				destinyknot: 'reckless',
				diveball: 'snowwarning',
				domefossil: 'solarpower',
				dousedrive: 'owntempo',
				dragonfang: 'compoundeyes',
				dragongem: 'furcoat',
				dreamball: 'solidrock',
				durinberry: 'soundproof',
				duskball: 'speedboost',
				ejectbutton: 'cursedbody',
				electirizer: 'stall',
				electricgem: 'hugepower',
				energypowder: 'stancechange',
				enigmaberry: 'refrigerate',
				expertbelt: 'cutecharm',
				fairygem: 'imposter',
				fastball: 'static',
				figyberry: 'regenerator',
				firegem: 'parentalbond',
				flameorb: 'damp',
				floatstone: 'rivalry',
				focusband: 'darkaura',
				friendball: 'steadfast',
				fullincense: 'defeatist',
				ganlonberry: 'defiant',
				greatball: 'stench',
				grepaberry: 'deltastream',
				gripclaw: 'desolateland',
				griseousorb: 'pixilate',
				habanberry: 'download',
				hardstone: 'drizzle',
				healball: 'stickyhold',
				heatrock: 'drought',
				heavyball: 'stormdrain',
				helixfossil: 'strongjaw',
				hondewberry: 'sturdy',
				iapapaberry: 'dryskin',
				icegem: 'purepower',
				icyrock: 'earlybird',
				ironball: 'rockhead',
				jabocaberry: 'roughskin',
				kasibberry: 'effectspore',
				kebiaberry: 'fairyaura',
				keeberry: 'filter',
				kelpsyberry: 'flamebody',
				kingsrock: 'flareboost',
				laggingtail: 'flashfire',
				lansatberry: 'flowergift',
				laxincense: 'flowerveil',
				leppaberry: 'forecast',
				levelball: 'suctioncups',
				liechiberry: 'forewarn',
				lightball: 'pickpocket',
				loveball: 'superluck',
				luckypunch: 'pickup',
				luminousmoss: 'friendguard',
				lureball: 'swarm',
				lustrousorb: 'plus',
				luxuryball: 'sweetveil',
				machobrace: 'runaway',
				magnet: 'frisk',
				magoberry: 'sandforce',
				magostberry: 'swiftswim',
				mail: 'prankster',
				marangaberry: 'galewings',
				masterball: 'symbiosis',
				metalcoat: 'gluttony',
				metalpowder: 'poisonheal',
				metronome: 'gooey',
				micleberry: 'grasspelt',
				miracleseed: 'guts',
				moonball: 'synchronize',
				muscleband: 'harvest',
				mysticwater: 'healer',
				nanabberry: 'tangledfeet',
				nestball: 'technician',
				netball: 'telepathy',
				nevermeltice: 'heatproof',
				nomelberry: 'levitate',
				occaberry: 'heavymetal',
				oddincense: 'honeygather',
				oldamber: 'thickfat',
				oranberry: 'sandrush',
				pamtreberry: 'tintedlens',
				parkball: 'torrent',
				passhoberry: 'hustle',
				payapaberry: 'hydration',
				pechaberry: 'sandstream',
				persimberry: 'sandveil',
				petayaberry: 'hypercutter',
				pinapberry: 'toughclaws',
				plumefossil: 'toxicboost',
				poisonbarb: 'icebody',
				poisongem: 'shadowtag',
				pokeball: 'trace',
				pomegberry: 'truant',
				premierball: 'aftermath',
				psychicgem: 'simple',
				qualotberry: 'unaware',
				quickball: 'unburden',
				quickclaw: 'illuminate',
				quickpowder: 'poisonpoint',
				rabutaberry: 'unnerve',
				rarebone: 'victorystar',
				rawstberry: 'sapsipper',
				razorclaw: 'illusion',
				razorfang: 'immunity',
				razzberry: 'vitalspirit',
				redcard: 'intimidate',
				repeatball: 'voltabsorb',
				rindoberry: 'infiltrator',
				ringtarget: 'scrappy',
				rockincense: 'innerfocus',
				rootfossil: 'waterabsorb',
				roseincense: 'insomnia',
				roseliberry: 'ironbarbs',
				rowapberry: 'serenegrace',
				safariball: 'waterveil',
				safetygoggles: 'ironfist',
				salacberry: 'justified',
				scopelens: 'keeneye',
				seaincense: 'klutz',
				sharpbeak: 'leafguard',
				shellbell: 'lightmetal',
				shockdrive: 'poisontouch',
				shucaberry: 'lightningrod',
				silkscarf: 'limber',
				silverpowder: 'liquidooze',
				skullfossil: 'weakarmor',
				smoothrock: 'magicbounce',
				snowball: 'magicguard',
				softsand: 'magician',
				spelltag: 'magmaarmor',
				spelonberry: 'whitesmoke',
				sportball: 'wonderskin',
				starfberry: 'magnetpull',
				steelgem: 'wonderguard',
				stick: 'pressure',
				stickybarb: 'marvelscale',
				tamatoberry: 'zenmode',
				tangaberry: 'megalauncher',
				thickclub: 'primordialsea',
				twistedspoon: 'minus',
				wacanberry: 'moldbreaker',
				watergem: 'analytic',
				waveincense: 'moody',
				weaknesspolicy: 'motordrive',
				whiteherb: 'moxie',
				widelens: 'multiscale',
				wikiberry: 'shedskin',
				wiseglasses: 'multitype',
				yacheberry: 'mummy',
				zoomlens: 'naturalcure',
			};
			const ability = itemToAbility[this.item] as ID;
			if (ability) return {...this.battle.dex.abilities.getByID(ability), ability: ability, onTakeItem: false} as any as Item;
			return this.battle.dex.items.getByID(this.item);
		},
		hasItem(item) {
			if (this.battle.dex.items.get(this.item).ability) return false;
			if (this.ignoringItem()) return false;
			if (!Array.isArray(item)) return this.item === this.battle.toID(item);
			return item.map(this.battle.toID).includes(this.item);
		},
		hasAbility(ability) {
			if (this.ignoringAbility()) return false;
			if (!Array.isArray(ability)) {
				ability = this.battle.toID(ability);
				if (this.ability === ability) return true;
			} else {
				ability = ability.map(this.battle.toID);
				if (ability.includes(this.ability)) return true;
			}
			if (ability === "klutz") return false;
			if (!this.item || this.ignoringItem()) return false;
			const item = this.battle.dex.items.get(this.item);
			if (!item.ability) return false;
			if (!Array.isArray(ability)) return ability === item.ability;
			return ability.includes(item.ability);
		},
		isGrounded(negateImmunity) {
			if ('gravity' in this.battle.field.pseudoWeather) return true;
			if ('ingrain' in this.volatiles) return true;
			if ('smackdown' in this.volatiles) return true;
			// if (this.hasItem('ironball')) return true;
			if (!negateImmunity && this.hasType('Flying')) return false;
			if (this.hasAbility('levitate') && !this.battle.suppressingAbility(this)) return null;
			if ('magnetrise' in this.volatiles) return false;
			if ('telekinesis' in this.volatiles) return false;
			return true; // !this.hasItem('airballoon');
		},
	},
};
